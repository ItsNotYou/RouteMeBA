package de.unipotsdam.nexplorer.server.persistence.hibernate.dto;

// Generated 19.09.2012 13:58:49 by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonProperty;

import de.unipotsdam.nexplorer.shared.GameStatus;

/**
 * Settings generated by hbm2java
 */
@Entity
@Table(name = "settings")
public class Settings implements java.io.Serializable {

	@JsonIgnore
	private Long id;
	@JsonIgnore
	public Byte isRunning;
	@JsonIgnore
	public Long runningSince;
	@JsonIgnore
	public Long lastPause;
	@JsonIgnore
	public Byte didEnd;
	@JsonIgnore
	public Long difficulty;
	@JsonIgnore
	public Long playingTime;
	@JsonIgnore
	public Long remainingPlayingTime;
	@JsonIgnore
	public String protocol;
	@JsonIgnore
	public Long baseNodeRange;
	@JsonProperty
	public Long itemCollectionRange;
	@JsonIgnore
	public Double playingFieldUpperLeftLatitude;
	@JsonIgnore
	public Double playingFieldUpperLeftLongitude;
	@JsonIgnore
	public Double playingFieldLowerRightLatitude;
	@JsonIgnore
	public Double playingFieldLowerRightLongitude;
	@JsonIgnore
	public Long maxBatteries;
	@JsonIgnore
	public Long maxBoosters;
	@JsonIgnore
	public Long bonusGoal;
	public Long updatePositionIntervalTime;
	public Long updateDisplayIntervalTime;
	@JsonIgnore
	public Long currentRoutingMessageProcessingRound;
	@JsonIgnore
	public Long currentDataPacketProcessingRound;
	private Integer version;
	private long pingDuration;

	public Settings() {
	}

	public Settings(Byte isRunning, Long runningSince, Long lastPause, Byte didEnd, Long difficulty, Long playingTime, Long remainingPlayingTime, String protocol, Long baseNodeRange, Long itemCollectionRange, Double playingFieldUpperLeftLatitude, Double playingFieldUpperLeftLongitude, Double playingFieldLowerRightLatitude, Double playingFieldLowerRightLongitude, Long maxBatteries, Long maxBoosters, Long currentRoutingMessageProcessingRound, Long currentDataPacketProcessingRound, Long bonusGoal, Long updatePositionIntervalTime, Long updateDisplayIntervalTime, long pingDuration) {
		this.isRunning = isRunning;
		this.runningSince = runningSince;
		this.lastPause = lastPause;
		this.didEnd = didEnd;
		this.difficulty = difficulty;
		this.playingTime = playingTime;
		this.remainingPlayingTime = remainingPlayingTime;
		this.protocol = protocol;
		this.baseNodeRange = baseNodeRange;
		this.itemCollectionRange = itemCollectionRange;
		this.playingFieldUpperLeftLatitude = playingFieldUpperLeftLatitude;
		this.playingFieldUpperLeftLongitude = playingFieldUpperLeftLongitude;
		this.playingFieldLowerRightLatitude = playingFieldLowerRightLatitude;
		this.playingFieldLowerRightLongitude = playingFieldLowerRightLongitude;
		this.maxBatteries = maxBatteries;
		this.maxBoosters = maxBoosters;
		this.currentRoutingMessageProcessingRound = currentRoutingMessageProcessingRound;
		this.currentDataPacketProcessingRound = currentDataPacketProcessingRound;
		this.bonusGoal = bonusGoal;
		this.updatePositionIntervalTime = updatePositionIntervalTime;
		this.updateDisplayIntervalTime = updateDisplayIntervalTime;
		this.pingDuration = pingDuration;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "is_running")
	public Byte getIsRunning() {
		return this.isRunning;
	}

	public void setIsRunning(Byte isRunning) {
		this.isRunning = isRunning;
	}

	@Column(name = "running_since")
	public Long getRunningSince() {
		return this.runningSince;
	}

	public void setRunningSince(Long runningSince) {
		this.runningSince = runningSince;
	}

	@Column(name = "last_pause")
	public Long getLastPause() {
		return this.lastPause;
	}

	public void setLastPause(Long lastPause) {
		this.lastPause = lastPause;
	}

	@Column(name = "did_end")
	public Byte getDidEnd() {
		return this.didEnd;
	}

	public void setDidEnd(Byte didEnd) {
		this.didEnd = didEnd;
	}

	@Column(name = "difficulty")
	public Long getDifficulty() {
		return this.difficulty;
	}

	public void setDifficulty(Long difficulty) {
		this.difficulty = difficulty;
	}

	@Column(name = "playing_time")
	public Long getPlayingTime() {
		return this.playingTime;
	}

	public void setPlayingTime(Long playingTime) {
		this.playingTime = playingTime;
	}

	@Column(name = "remaining_playing_time")
	public Long getRemainingPlayingTime() {
		return this.remainingPlayingTime;
	}

	public void setRemainingPlayingTime(Long remainingPlayingTime) {
		this.remainingPlayingTime = remainingPlayingTime;
	}

	@Column(name = "protocol")
	public String getProtocol() {
		return this.protocol;
	}

	public void setProtocol(String protocol) {
		this.protocol = protocol;
	}

	@Column(name = "base_node_range")
	public Long getBaseNodeRange() {
		return this.baseNodeRange;
	}

	public void setBaseNodeRange(Long baseNodeRange) {
		this.baseNodeRange = baseNodeRange;
	}

	@Column(name = "item_collection_range")
	public Long getItemCollectionRange() {
		return this.itemCollectionRange;
	}

	public void setItemCollectionRange(Long itemCollectionRange) {
		this.itemCollectionRange = itemCollectionRange;
	}

	@Column(name = "playing_field_upper_left_latitude", precision = 18, scale = 9)
	public Double getPlayingFieldUpperLeftLatitude() {
		return this.playingFieldUpperLeftLatitude;
	}

	public void setPlayingFieldUpperLeftLatitude(Double playingFieldUpperLeftLatitude) {
		this.playingFieldUpperLeftLatitude = playingFieldUpperLeftLatitude;
	}

	@Column(name = "playing_field_upper_left_longitude", precision = 18, scale = 9)
	public Double getPlayingFieldUpperLeftLongitude() {
		return this.playingFieldUpperLeftLongitude;
	}

	public void setPlayingFieldUpperLeftLongitude(Double playingFieldUpperLeftLongitude) {
		this.playingFieldUpperLeftLongitude = playingFieldUpperLeftLongitude;
	}

	@Column(name = "playing_field_lower_right_latitude", precision = 18, scale = 9)
	public Double getPlayingFieldLowerRightLatitude() {
		return this.playingFieldLowerRightLatitude;
	}

	public void setPlayingFieldLowerRightLatitude(Double playingFieldLowerRightLatitude) {
		this.playingFieldLowerRightLatitude = playingFieldLowerRightLatitude;
	}

	@Column(name = "playing_field_lower_right_longitude", precision = 18, scale = 9)
	public Double getPlayingFieldLowerRightLongitude() {
		return this.playingFieldLowerRightLongitude;
	}

	public void setPlayingFieldLowerRightLongitude(Double playingFieldLowerRightLongitude) {
		this.playingFieldLowerRightLongitude = playingFieldLowerRightLongitude;
	}

	@Column(name = "max_batteries")
	public Long getMaxBatteries() {
		return this.maxBatteries;
	}

	public void setMaxBatteries(Long maxBatteries) {
		this.maxBatteries = maxBatteries;
	}

	@Column(name = "max_boosters")
	public Long getMaxBoosters() {
		return this.maxBoosters;
	}

	public void setMaxBoosters(Long maxBoosters) {
		this.maxBoosters = maxBoosters;
	}

	@Column(name = "bonus_goal")
	public Long getBonusGoal() {
		return this.bonusGoal;
	}

	public void setBonusGoal(Long bonusGoal) {
		this.bonusGoal = bonusGoal;
	}

	@Column(name = "update_position_interval_time")
	public Long getUpdatePositionIntervalTime() {
		return this.updatePositionIntervalTime;
	}

	public void setUpdatePositionIntervalTime(Long updatePositionIntervalTime) {
		this.updatePositionIntervalTime = updatePositionIntervalTime;
	}

	@Column(name = "update_display_interval_time")
	public Long getUpdateDisplayIntervalTime() {
		return this.updateDisplayIntervalTime;
	}

	public void setUpdateDisplayIntervalTime(Long updateDisplayIntervalTime) {
		this.updateDisplayIntervalTime = updateDisplayIntervalTime;
	}

	@Column(name = "current_routing_message_processing_round")
	public Long getCurrentRoutingMessageProcessingRound() {
		return this.currentRoutingMessageProcessingRound;
	}

	public void setCurrentRoutingMessageProcessingRound(Long currentRoutingMessageProcessingRound) {
		this.currentRoutingMessageProcessingRound = currentRoutingMessageProcessingRound;
	}

	@Column(name = "current_data_packet_processing_round")
	public Long getCurrentDataPacketProcessingRound() {
		return this.currentDataPacketProcessingRound;
	}

	public void setCurrentDataPacketProcessingRound(Long currentDataPacketProcessingRound) {
		this.currentDataPacketProcessingRound = currentDataPacketProcessingRound;
	}

	public void setGameState(GameStatus state) {
		switch (state) {
		case ISRUNNING:
			setIsRunning((byte) 1);
			setDidEnd((byte) 0);
			break;
		case ISPAUSED:
			setIsRunning((byte) 0);
			setDidEnd((byte) 0);
			break;
		case HASENDED:
			setIsRunning((byte) 0);
			setDidEnd((byte) 1);
			break;
		case NOTSTARTED:
		default:
			setIsRunning(null);
			setDidEnd(null);
		}
	}

	@Transient
	public GameStatus getGameState() {
		if (getIsRunning() == null && getDidEnd() == null) {
			return GameStatus.NOTSTARTED;
		} else if (getIsRunning() == 1 && getDidEnd() == 0) {
			return GameStatus.ISRUNNING;
		} else if (getIsRunning() == 1 && getDidEnd() == null) {
			return GameStatus.ISRUNNING;
		} else if (getDidEnd() == 0) {
			return GameStatus.ISPAUSED;
		} else {
			return GameStatus.HASENDED;
		}
	}

	@Version
	@Column(name = "OPTLOCK")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "ping_duration")
	public long getPingDuration() {
		return this.pingDuration;
	}

	public void setPingDuration(long pingDuration) {
		this.pingDuration = pingDuration;
	}
}
