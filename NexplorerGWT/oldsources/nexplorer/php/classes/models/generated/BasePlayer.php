<?php

/**
 * BasePlayer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $role
 * @property string $name
 * @property integer $score
 * @property double $latitude
 * @property double $longitude
 * @property integer $lastPositionUpdate
 * @property double $battery
 * @property integer $hasSignalRangeBooster
 * @property integer $hasSignalStrengthBooster
 * @property integer $remainingHighPriorityMessages
 * @property integer $sequenceNumber
 * @property Doctrine_Collection $AODVDataPackets
 * @property Doctrine_Collection $AODVRoutingTableEntries
 * @property Doctrine_Collection $AODVRoutingMessages
 * @property Doctrine_Collection $Neighbours
 * @property Doctrine_Collection $AODVDataPacket
 * @property Doctrine_Collection $Neighbour
 * @property Doctrine_Collection $Settings
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlayer extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('players');
        $this->hasColumn('role', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => '1',
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'length' => '45',
             ));
        $this->hasColumn('score', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('latitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('longitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('last_position_update as lastPositionUpdate', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('battery', 'double', 5, array(
             'type' => 'double',
             'length' => '5',
             'scale' => '2',
             ));
        $this->hasColumn('has_signal_range_booster as hasSignalRangeBooster', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('has_signal_strength_booster as hasSignalStrengthBooster', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('remaining_high_priority_messages as remainingHighPriorityMessages', 'integer', 4, array(
             'type' => 'integer',
             'default' => 5,
             'length' => '4',
             ));
        $this->hasColumn('sequence_number as sequenceNumber', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));

        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AODVDataPacket as AODVDataPackets', array(
             'local' => 'id',
             'foreign' => 'currentNodeId'));

        $this->hasMany('AODVRoutingTableEntry as AODVRoutingTableEntries', array(
             'local' => 'id',
             'foreign' => 'nodeId'));

        $this->hasMany('AODVRoutingMessage as AODVRoutingMessages', array(
             'local' => 'id',
             'foreign' => 'currentNodeId'));

        $this->hasMany('Neighbour as Neighbours', array(
             'local' => 'id',
             'foreign' => 'nodeId'));

        $this->hasMany('AODVDataPacket', array(
             'local' => 'id',
             'foreign' => 'ownerId'));

        $this->hasMany('Neighbour', array(
             'local' => 'id',
             'foreign' => 'neighbourId'));

        $this->hasMany('Settings', array(
             'local' => 'id',
             'foreign' => 'bonusGoal'));
    }
}