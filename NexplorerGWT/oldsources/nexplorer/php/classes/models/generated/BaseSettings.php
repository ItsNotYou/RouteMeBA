<?php

/**
 * BaseSettings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $isRunning
 * @property integer $runningSince
 * @property integer $lastPause
 * @property integer $didEnd
 * @property integer $difficulty
 * @property integer $playingTime
 * @property integer $remainingPlayingTime
 * @property string $protocol
 * @property integer $baseNodeRange
 * @property integer $itemCollectionRange
 * @property double $playingFieldUpperLeftLatitude
 * @property double $playingFieldUpperLeftLongitude
 * @property double $playingFieldLowerRightLatitude
 * @property double $playingFieldLowerRightLongitude
 * @property integer $maxBatteries
 * @property integer $maxBoosters
 * @property integer $currentRoutingMessageProcessingRound
 * @property integer $currentDataPacketProcessingRound
 * @property integer $bonusGoal
 * @property integer $updatePositionIntervalTime
 * @property integer $updateDisplayIntervalTime
 * @property Player $BonusGoal
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSettings extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('settings');
        $this->hasColumn('is_running as isRunning', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('running_since as runningSince', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('last_pause as lastPause', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('did_end as didEnd', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('difficulty', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('playing_time as playingTime', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('remaining_playing_time as remainingPlayingTime', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('protocol', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('base_node_range as baseNodeRange', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('item_collection_range as itemCollectionRange', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('playing_field_upper_left_latitude as playingFieldUpperLeftLatitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('playing_field_upper_left_longitude as playingFieldUpperLeftLongitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('playing_field_lower_right_latitude as playingFieldLowerRightLatitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('playing_field_lower_right_longitude as playingFieldLowerRightLongitude', 'double', 18, array(
             'type' => 'double',
             'length' => '18',
             'scale' => '9',
             ));
        $this->hasColumn('max_batteries as maxBatteries', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('max_boosters as maxBoosters', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('current_routing_message_processing_round as currentRoutingMessageProcessingRound', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('current_data_packet_processing_round as currentDataPacketProcessingRound', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('bonus_goal as bonusGoal', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('update_position_interval_time as updatePositionIntervalTime', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('update_display_interval_time as updateDisplayIntervalTime', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Player as BonusGoal', array(
             'local' => 'bonusGoal',
             'foreign' => 'id'));
    }
}