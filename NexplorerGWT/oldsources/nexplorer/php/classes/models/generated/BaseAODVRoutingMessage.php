<?php

/**
 * BaseAODVRoutingMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $currentNodeId
 * @property string $type
 * @property integer $sourceId
 * @property integer $destinationId
 * @property integer $lifespan
 * @property integer $sequenceNumber
 * @property integer $hopCount
 * @property array $passedNodes
 * @property integer $processingRound
 * @property Player $CurrentNode
 * @property Player $Source
 * @property Player $Destination
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAODVRoutingMessage extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('aodv_routing_messages');
        $this->hasColumn('current_node_id as currentNodeId', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('source_id as sourceId', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('destination_id as destinationId', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lifespan', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sequence_number as sequenceNumber', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('hop_count as hopCount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('passed_nodes as passedNodes', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('processing_round as processingRound', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Player as CurrentNode', array(
             'local' => 'currentNodeId',
             'foreign' => 'id'));

        $this->hasOne('Player as Source', array(
             'local' => 'sourceId',
             'foreign' => 'id'));

        $this->hasOne('Player as Destination', array(
             'local' => 'destinationId',
             'foreign' => 'id'));
    }
}